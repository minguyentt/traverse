services:
  # api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: traverse-api
  #   volumes:
  #     - ./:/app
  #   environment:
  #     - DB_HOST=${DB_HOST}
  #     - DB_NAME=${DB_NAME}
  #     - DB_PORT=${DB_PORT}
  #     - DB_USER=${DB_USER}
  #     - DB_PASSWORD=${DB_PASSWORD}
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     postgres_db:
  #       condition: service_healthy

  postgres_db:
    image: postgres
    container_name: traverse_db
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - api-network
    ports:
      - "80:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    restart: unless-stopped
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOST=redis
    ports:
      - "127.0.0.1:8081:8081"
    depends_on:
      -redis
    restart:
      - unless-stopped

volumes:
  pg_data:

networks:
  api-network:
    driver: bridge
